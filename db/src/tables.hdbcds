namespace ChickenWings.db;

context tables {
    /*
    	* DataTypeDefinition
    	*/
    type NameT : String(20);
    type PhoneT : String(15);
    type EmailT : String(30);
    type CityT : String(20);
    type CountryT : String(25);
    type CodeT : String(3);
    type FlightT : String(6);
    type PriceT : Decimal(12, 2);
    type ModelT : String(10);
    type SeatT : String(4);

    /*
    	* Structure definition
    	* technical structure to be used in all entities
    	* to store last changed timestamp and last changed by user
    	*/
    type ChangeT {
        USER      : String(20);   // ChangedbyUser
        TIMESTAMP : UTCTimestamp;
    };


    /*@@layout{"layoutInfo":{"x":-828,"y":-838}}*/
    entity Airport {
        key CODE      :                 String(3); // Airport IATA Code
            NAME      :                 String(50); // Airport Name
            NOME      :                 String(50); // Airport Name
            CITY      :                 CityT; // Airport City
            COUNTRY   :                 CountryT            default 'USA'; // Airport Country
            TIMEZONE  :                 String(3); // Airport Time Zone
            LATITUDE  :                 Decimal(12, 6)      not null; // Coordinates : Latitude
            LONGITUDE :                 Decimal(12, 6)      not null; // Coordinates : Longitude
            LOCATION  : /*SpatialData*/ hana.ST_POINT(4326) = new st_point('POINT(' || LONGITUDE || ' ' || LATITUDE || ')', 4326);
            //		GeoCoordinates : Point 4326
            CHANGE    :                 ChangeT; // Technical Columns
    }
    technical configuration {
        column store; // Column Table
        auto merge; // Enable auto merge
        unload priority 5; // Standard settings
        group type app group subtype ChickenWings group name master;
    };


    //Plane Details
/*@@layout{"layoutInfo":{"x":1230,"y":61}}*/
    entity Plane {
        key REGNO        : Integer;    // Registration Number
            MODEL        : String(10); // Model Name
            MANUFACTURER : String(20); // Manufacturer
            TYPE         : String(20); // Type of Aircraft
            YEAR         : Integer; // Year of Manufacture
            REGDATE      : LocalDate; // Registration Date
            MAXSEAT      : Integer; // Maximum Seating Capacity
            ECOSEAT      : Integer; // No of Economy Class Seats
            BUSSEAT      : Integer; // No of Business Class Seats
            FIRSEAT      : Integer; // No of First Class Seats
            CHANGE       : ChangeT; // Last Change Timestamp and User
    }
    technical configuration {
        column store; // Column Table
        auto merge; // Enable auto merge
        unload priority 5; // Standard settings
        group type app group subtype ChickenWings group name master;
    };


    // CrewDetails
/*@@layout{"layoutInfo":{"x":34,"y":-352}}*/
    entity Crew {
        key CREWID  : Integer; // Customer ID
            FNAME   : NameT; // First Name
            LNAME   : NameT; // Last Name
            MOBILE  : PhoneT; // Mobile / Cell Number
            EMAIL   : EmailT; // Email
            COUNTRY : CountryT; // Country of Residence
            ROLE    : String(20); // Job / Role of Crew
            CHANGE  : ChangeT; // Last Change Timestamp and User
    }
    technical configuration {
        column store; // Column Table
        auto merge; // Enable automerge
        unload priority 5; // Standard settings
        group type app group subtype ChickenWings group name master;
    };


    //CustomerDetails
/*@@layout{"layoutInfo":{"x":1692,"y":-454}}*/
    entity Customer {
        key CUSTID  : Integer; // CustomerID
            FNAME   : NameT; // FirstName
            LNAME   : NameT; // LastName
            MOBILE  : PhoneT; // Mobile / Cell Number
            EMAIL   : EmailT; // Email
            COUNTRY : CountryT; // Country of Residence
            FLYERID : String(20); // Frequent Flyer ID
            CHANGE  : ChangeT; // Last Change Timestamp and User
    }
    technical configuration {
        column store; // Column Table
        auto merge; // Enable auto merge
        unload priority 5; // Standard settings
        group type app group subtype ChickenWings group name master;
    };


    //Seat Details
/*@@layout{"layoutInfo":{"x":-121,"y":-609}}*/
    entity Seat {
        key MODEL  : ModelT; //Plane Model
        key SEAT   : SeatT; //Seat Number
            CLASS  : String(10); //Class of Seat : Economy, Business
            STYPE  : String(15); //Type of Seating : Window/Isle
            CHANGE : ChangeT; //Last Change Timestamp and User
    }
    technical configuration {
        column store; //ColumnTable
        auto merge; //Enableautomerge
        unload priority 5; //Standardsettings
        group type app group subtype ChickenWings group name master;
    };


    //Price Calendar
    entity PriceCalendar {
        key CDATE  : LocalDate; // Date
            RATE   : String(10); // Standard or Peak Rate for Pricing
            SEASON : String(20); // Season used for Pricing
            CHANGE : ChangeT; // Last Change Timestamp and User
    }
    technical configuration {
        column store; // Column Table
        auto merge; //Enable auto merge
        unload priority 5; //Standard settings
        group type app group subtype ChickenWings group name master;
    };


    // Connection Details
/*@@layout{"layoutInfo":{"x":167,"y":-77}}*/
    entity Connection {
        key FLIGHT       : FlightT; // Flight Number
            FROMAP       : CodeT; // Origin Airport
            TOAP         : CodeT; // Destination Airport
            DEPT         : LocalTime; // Scheduled Departure Time
            ARRT         : LocalTime; // Scheduled Arrival Time
            SSTARTD      : LocalDate; // Service Start Date
            SENDD        : LocalDate; // Service End Date
            ESPRICE      : PriceT; // Economy Class Standard Price
            EPPRICE      : PriceT; // Economy Class Peak Price
            BSPRICE      : PriceT; // Business Class Standard Price
            BPPRICE      : PriceT; // Business Class Peak Price
            FSPRICE      : PriceT; // First Class Standard Price
            FPPRICE      : PriceT; // First Class Peak Price
            MILES        : Integer; // Distance in Miles
            CHANGE       : ChangeT; // Last Change Timestamp and User
            // Associations
            _FromAirport : association[*, 0..1] to Airport on _FromAirport.CODE = FROMAP;
            _ToAirport   : association[*, 0..1] to Airport on _ToAirport.CODE = TOAP;
    }
    technical configuration {
        column store; // Column Table
        auto merge; // Enable automerge
        unload priority 5; // Standard settings
        group type app group subtype ChickenWings group name master;
    };


    //FlightDetails
/*@@layout{"layoutInfo":{"x":613,"y":-588}}*/
    entity Flight {
        key FLIGHT      : FlightT; // FlightNumber
        key FDATE       : LocalDate; // FlightDate
            PLANE       : Integer; // PlaneRegNo
            PILOT1      : Integer; // Pilot
            PILOT2      : Integer; // Co-Pilot
            CREW1       : Integer; // Crew1
            CREW2       : Integer; // Crew2
            CREW3       : Integer; // Crew3
            DEPT        : LocalTime; // ActualDepartureTime
            ARRT        : LocalTime; // ActualArrivalTime
            STATUS      : String(10); // FlightStatus
            CHANGE      : ChangeT; // LastChangeTimestampandUser
            // Associations
            _Connection : association[*, 0..1] to Connection on _Connection.FLIGHT = FLIGHT;
            _Plane      : association[*, 0..1] to Plane      on _Plane.REGNO = PLANE;
            _Pilot1     : association[*, 0..1] to Crew       on _Pilot1.CREWID = PILOT1;
            _Pilot2     : association[*, 0..1] to Crew       on _Pilot2.CREWID = PILOT2;
            _Crew1      : association[*, 0..1] to Crew       on _Crew1.CREWID = CREW1;
            _Crew2      : association[*, 0..1] to Crew       on _Crew2.CREWID = CREW2;
            _Crew3      : association[*, 0..1] to Crew       on _Crew3.CREWID = CREW3;
    }
    technical configuration {
        column store; //ColumnTable
        auto merge; //Enableautomerge
        unload priority 5; //Standardsettings
        group type app group subtype ChickenWings group name master;
    };


    //BookingDetails
/*@@layout{"layoutInfo":{"x":500,"y":-1194}}*/
    entity Booking {
        key FLIGHT    : FlightT; // Flight Number
        key FDATE     : LocalDate; // Flight Date
        key MODEL     : ModelT; // Plane Model
        key SEAT      : ModelT;  // Seat Number
            CUSTID    : Integer; // Customer ID
            STDPRICE  : PriceT;  // Base Price
            BOOKPRICE : PriceT; // Book Price
            FEES      : PriceT; // Surcharges / Fees
            DISCOUNT  : PriceT; // Discount
            TAX       : PriceT; // Tax
            TOTAL     : PriceT; // Total Amount Charged
            PAYMENT   : String(15); // Mode of Payment CREDIT, CASH, POINTS
            STATUS    : String(10); // Booking Status Hold/Confirmed/Available
            PASSENGER : String(20); // Name of the Passenger
            CHECKIN   : String(1); // Check-in Status
            CHANGE    : ChangeT; // Last Change Timestamp and User
            // Associations
            _Flight   : association[*, 0..1] to Flight {
                                                         FLIGHT,
                                                         FDATE
                                                       };
            _Seat     : association[*, 0..1] to Seat {
                                                       MODEL,
                                                       SEAT
                                                     };
            _Customer : association[*, 0..1] to Customer { CUSTID };
    }
    technical configuration {
        column store; // Column Table
        auto merge; // Enable auto merge
        unload priority 5; // Standard settings
        group type app group subtype ChickenWings group name transaction;
    };


};